{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","CardList","robots","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,G,MAAO,SAACC,GAAD,OACZ,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACpB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,aCHfC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,OAAOC,KAAI,SAAAN,GAAK,OACnB,cAAC,EAAD,CACMA,MAAOA,GADFA,EAAMC,WCJhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCNG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbnC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJL,E,gEAQO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,OAAQkB,S,+BAO/B,IAAD,EACuBC,KAAKN,MAA5Bb,EADA,EACAA,OAAQU,EADR,EACQA,YACTU,EAAgBpB,EAAOqB,QAAO,SAAA1B,GAAK,OAAIA,EAAME,KAAKyB,cAAcC,SAASb,EAAYY,kBAE3F,OACE,sBAAK9B,UAAU,MAAf,UACA,gDACA,cAAC,EAAD,CACAW,YAAY,gBACZC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUJ,OAAQoB,W,GA7BNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.196eb7c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>  (\r\n        <div className='Card'>\r\n            <img alt='robot' src={`https://robohash.org/${props.robot.id}?set=set1&size=180x180`}/>\r\n            <h2>{props.robot.name}</h2>\r\n            <p>{props.robot.email}</p>\r\n        </div>\r\n        \r\n    );\r\n","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.robots.map(robot => (\r\n            <Card key={robot.id}\r\n                  robot={robot}/>\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className='search'\r\n           type='search'\r\n           placeholder={placeholder}\r\n           onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super(); \n      this.state = {\n        robots: [],\n        searchField: '' \n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ robots: users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const {robots, searchField} = this.state;\n    const filterdRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n      <h1>Robots rolodex</h1>\n      <SearchBox\n      placeholder='search robots'\n      handleChange={this.handleChange}/>\n      <CardList robots={filterdRobots}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}